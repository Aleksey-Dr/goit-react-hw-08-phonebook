{"version":3,"file":"static/js/950.f47babcf.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/title/Title.module.css?93c1","components/title/Title.jsx","webpack://goit-react-hw-08-phonebook/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactForm/ContactForm.module.css?fd94","components/contactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/contactList/ContactList.module.css?7e3b","webpack://goit-react-hw-08-phonebook/./src/components/contactsItem/ContactsItem.module.css?da42","components/contactsItem/ContactsItem.jsx","components/contactList/ContactList.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__ugKfF\"};","import clsx from 'clsx';\nimport css from './Title.module.css';\n\nconst Title = ({ children }) => {\n    return (\n        <h2 className={clsx(css.title)}>\n            {children}\n        </h2>\n    );\n};\n\nexport default Title;","// extracted by mini-css-extract-plugin\nexport default {\"labl\":\"Filter_labl__wYIqS\",\"filter-input\":\"Filter_filter-input__PKXqW\"};","import { useDispatch } from \"react-redux\";\n\nimport clsx from 'clsx';\nimport css from './Filter.module.css';\n\nimport { changeFilter } from '../../redux/filterSlice';\n\nconst Filter = () => {\n\n    const despatch = useDispatch();\n    const filterValue = event => {\n        despatch(changeFilter(event.currentTarget.value));\n\n    };\n\n    return (\n        <>\n            <h3>Contacts</h3>\n            <label className={clsx(css.labl)}>Find contacts by name\n                <input className={clsx(css['filter-input'])}\n                    type=\"text\"\n                    onChange={filterValue}\n                />\n            </label>\n        </>\n    );\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__ttXmo\",\"input\":\"ContactForm_input__e2U+9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport clsx from 'clsx';\nimport css from './ContactForm.module.css';\n\nimport { addContact } from '../../redux/operations';\nimport { selectItems } from '../../redux/selectors';\nimport Title from \"../title\";\n\nconst ContactForm = () => {\n\n  const despatch = useDispatch();\n  const contacts = useSelector(selectItems);\n  const onAddContact = (name, number, id) =>\n    despatch(addContact(name, number, id));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    \n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.find(contact =>\n      contact.name === name)) {\n        alert(name + ' is already in contacts');\n        return;\n      }\n\n    onAddContact({ name, number });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <form className={clsx(css.form)} onSubmit={handleSubmit}>\n        <label htmlFor={name}>\n          Name\n          <input\n            className={clsx(css.input)}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label htmlFor={number}>\n          Number\n          <input\n            className={clsx(css.input)}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__S-drv\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts-item\":\"ContactsItem_contacts-item__oqFff\",\"name\":\"ContactsItem_name__Yu+LA\"};","import { useDispatch } from \"react-redux\";\n\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport css from './ContactsItem.module.css';\n\nimport { deleteContact } from '../../redux/operations';\n\nconst ContactsItem = ({ id, name, number }) => {\n\n  const despatch = useDispatch();\n\n  return (\n    <>\n      <li className={clsx(css['contacts-item'])}>\n        <span>\n          <span className={clsx(css.name)}>{name}:</span> {number}\n        </span>\n        <button type=\"button\" onClick={() => despatch(deleteContact({id}))}>\n          Delete\n        </button>\n      </li>\n    </>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport clsx from 'clsx';\nimport css from './ContactList.module.css';\n\nimport ContactsItem from '../contactsItem';\nimport Loader from '../loader';\n\nimport { fetchContacts } from '../../redux/operations';\nimport { selectContacts, selectItems, selectFilter } from '../../redux/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectItems);\n  const { isLoading, error } = useSelector(selectContacts);\n\n  const normalizedFilter = filter.toLowerCase();\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p><b>Error: </b>{error}</p>}\n      <ul className={clsx(css.list)}>\n        {filterContacts.map(({ id, name, number }) => {\n          return <ContactsItem key={id} id={id} name={name} number={number} />;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import Filter from 'components/filter';\nimport ContactForm from './../../components/contactForm';\nimport ContactList from '../../components/contactList';\n\nconst Contacts = () => {\n    return (\n        <>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </>\n    );\n};\n\nexport default Contacts;"],"names":["children","className","clsx","css","despatch","useDispatch","type","onChange","event","changeFilter","currentTarget","value","contacts","useSelector","selectItems","useState","name","setName","number","setNumber","handleChange","onSubmit","preventDefault","find","contact","alert","id","addContact","onAddContact","htmlFor","pattern","title","required","onClick","deleteContact","dispatch","useEffect","fetchContacts","filter","selectFilter","selectContacts","isLoading","error","normalizedFilter","toLowerCase","filterContacts","includes","map"],"sourceRoot":""}